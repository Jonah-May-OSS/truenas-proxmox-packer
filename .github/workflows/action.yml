name: TrueNAS Plugin for Proxmox VE Packager

on:
  repository_dispatch:
    types: [build_push]

env:
  DEB_PACKAGE_NAME: 'truenas-proxmox'
  DEB_DISTRO_VERSION: 'any-version'
  PACKER_REPO: 'Jonah-May-OSS/truenas-proxmox-packer'
  PLUGIN_SOURCE_REPO: 'Jonah-May-OSS/truenas-proxmox'

jobs:
  build_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout packer repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PACKER_REPO }}

      - name: Set environment variables and determine version
        id: vars
        shell: bash
        run: |
          REF="${{ github.event.client_payload.ref }}"
          BRANCH="${REF#refs/heads/}"
          echo "GitHub branch is: $BRANCH"

          if [[ "$BRANCH" == feature_* ]] || [[ "$BRANCH" == ng ]]; then
            FOLDER="development"
            VERSION="3.0.0-alpha1"
            REPO_NAME="truenas-proxmox-snapshots"
          elif [[ "$BRANCH" == master ]]; then
            FOLDER="testing"
            VERSION="3.0.0-beta5"
            REPO_NAME="truenas-proxmox-testing"
          elif [[ "$BRANCH" =~ ^(v?3\.0|3\.0.*)$ ]]; then
            FOLDER="stable"
            VERSION="3.0.0"
            REPO_NAME="truenas-proxmox"
          else
            echo "ERROR: Unknown branch '$BRANCH'" >&2
            exit 1
          fi
          # Use environment file instead of deprecated set-output
          echo "buildFolder=$FOLDER" >> "$GITHUB_OUTPUT"
          echo "debVersion=$VERSION" >> "$GITHUB_OUTPUT"
          echo "artifactRepo=$REPO_NAME" >> "$GITHUB_OUTPUT"

      - name: Checkout plugin source
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PLUGIN_SOURCE_REPO }}
          path: plugin-source

      - name: Prepare packer directory
        shell: bash
        run: |
          set -euo pipefail
          rsync -a plugin-source/ "${{ steps.vars.outputs.buildFolder }}/"

      - name: Copy LunCmd plugin module
        shell: bash
        run: |
          mkdir -p "${{ steps.vars.outputs.buildFolder }}/usr/share/perl5/PVE/Storage/LunCmd"
          cp plugin-source/perl5/PVE/Storage/LunCmd/TrueNAS.pm \
             "${{ steps.vars.outputs.buildFolder }}/usr/share/perl5/PVE/Storage/LunCmd/"

      - name: Copy patch files
        shell: bash
        run: |
          mkdir -p "${{ steps.vars.outputs.buildFolder }}/usr/share/truenas-proxmox/patches"
          cp plugin-source/pve-manager/js/pvemanagerlib.js.patch \
             "${{ steps.vars.outputs.buildFolder }}/usr/share/truenas-proxmox/patches/pvemanagerlib.patch"
          cp plugin-source/pve-docs/api-viewer/apidoc.js.patch \
             "${{ steps.vars.outputs.buildFolder }}/usr/share/truenas-proxmox/patches/apidoc.patch"
          cp plugin-source/perl5/PVE/Storage/ZFSPlugin.pm.patch \
             "${{ steps.vars.outputs.buildFolder }}/usr/share/truenas-proxmox/patches/ZFSPlugin.pm.patch"

      - name: Update DEBIAN/control version
        shell: bash
        run: |
          CONTROL_FILE="${{ steps.vars.outputs.buildFolder }}/DEBIAN/control"
          if [ ! -f "$CONTROL_FILE" ]; then
            echo "ERROR: Control file not found at $CONTROL_FILE" >&2
            exit 1
          fi
          sed -i "s/^Version:.*$/Version: ${{ steps.vars.outputs.debVersion }}/" "$CONTROL_FILE"

      - name: Ensure maintainer scripts are executable
        shell: bash
        run: |
          for script in preinst postinst prerm postrm; do
            if [ -f "${{ steps.vars.outputs.buildFolder }}/DEBIAN/$script" ]; then
              chmod 0755 "${{ steps.vars.outputs.buildFolder }}/DEBIAN/$script"
            fi
          done

      - name: Build Debian package
        shell: bash
        run: |
          dpkg-deb -Zgzip --build "${{ steps.vars.outputs.buildFolder }}" \
            "${{ env.DEB_PACKAGE_NAME }}_${{ steps.vars.outputs.debVersion }}_all.deb"

      - name: Push to Cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: deb
          owner: jonah-may-oss
          repo: ${{ steps.vars.outputs.artifactRepo }}
          distro: debian
          release: ${{ env.DEB_DISTRO_VERSION }}
          file: "${{ env.DEB_PACKAGE_NAME }}_${{ steps.vars.outputs.debVersion }}_all.deb"
