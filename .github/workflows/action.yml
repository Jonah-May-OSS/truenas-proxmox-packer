name: TrueNAS Plugin for Proxmox VE Packager

on:
  repository_dispatch:
    types: [build_push]

env:
  DEB_PACKAGE_NAME: 'truenas-proxmox'
  DEB_DISTRO_VERSION: 'any-version'
  PACKER_REPO: 'Jonah-May-OSS/truenas-proxmox-packer'
  PLUGIN_SOURCE_REPO: 'Jonah-May-OSS/truenas-proxmox'

jobs:
  build_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout packer repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PACKER_REPO }}

      - name: Set environment variables
        shell: bash
        run: |
          REF="${{ github.event.client_payload.ref }}"
          BRANCH="${REF#refs/heads/}"
          echo "GitHub branch is: $BRANCH"

          if [[ "$BRANCH" == feature_* ]] || [[ "$BRANCH" == ng ]]; then
            FOLDER="development"
            VERSION="3.0.0-alpha1"
            REPO_NAME="truenas-proxmox-snapshots"
          elif [[ "$BRANCH" == master ]]; then
            FOLDER="testing"
            VERSION="3.0.0-beta1"
            REPO_NAME="truenas-proxmox-testing"
          elif [[ "$BRANCH" =~ ^(v?3\.0|3\.0.*)$ ]]; then
            FOLDER="stable"
            VERSION="3.0.0"
            REPO_NAME="truenas-proxmox"
          else
            echo "ERROR: Unknown branch '$BRANCH'" >&2
            exit 1
          fi
          echo "buildFolder=$FOLDER" >> $GITHUB_ENV
          echo "DEB_PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "ARTIFACT_REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Checkout plugin source
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PLUGIN_SOURCE_REPO }}
          path: plugin-source

      - name: Prepare packer directory
        shell: bash
        run: |
          set -euo pipefail
          rsync -a plugin-source/ "${{ env.buildFolder }}/"

      - name: Fix permissions on DEBIAN metadata and scripts
        shell: bash
        run: |
          chmod -R 0755 "${{ env.buildFolder }}/DEBIAN"

      - name: Strip source stanza from control
        shell: bash
        run: |
          CONTROL="${{ env.buildFolder }}/DEBIAN/control"
          if [ ! -f "$CONTROL" ]; then
            echo "ERROR: control file not found at $CONTROL" >&2
            exit 1
          fi
          LINE=$(grep -n '^Package:' "$CONTROL" | cut -d: -f1)
          tail -n +"$LINE" "$CONTROL" > "${CONTROL}.tmp"
          mv "${CONTROL}.tmp" "$CONTROL"

      - name: Update DEBIAN/control Version
        shell: bash
        run: |
          CONTROL_FILE="${{ env.buildFolder }}/DEBIAN/control"
          if [ ! -f "$CONTROL_FILE" ]; then
            echo "ERROR: control file not found at $CONTROL_FILE" >&2
            exit 1
          fi
          sed -i "s/^Version:.*/Version: ${{ env.DEB_PACKAGE_VERSION }}/" "$CONTROL_FILE"

      - name: Build Debian package
        shell: bash
        run: |
          dpkg-deb -Zgzip --build "${{ env.buildFolder }}" \
            "${{ env.DEB_PACKAGE_NAME }}_${{ env.DEB_PACKAGE_VERSION }}_all.deb"

      - name: Push to Cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: deb
          owner: jonah-may-oss
          repo: ${{ env.ARTIFACT_REPO_NAME }}
          distro: debian
          release: ${{ env.DEB_DISTRO_VERSION }}
          file: "${{ env.DEB_PACKAGE_NAME }}_${{ env.DEB_PACKAGE_VERSION }}_all.deb"
