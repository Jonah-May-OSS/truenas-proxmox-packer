name: TrueNAS Plugin for Proxmox VE Packager

on:
  repository_dispatch:
    types: [build_push]

env:
  DEB_PACKAGE_NAME: 'truenas-proxmox'
  DEB_DISTRO_VERSION: 'any-version'
  PACKER_REPO: 'Jonah-May-OSS/truenas-proxmox-packer'
  PLUGIN_SOURCE_REPO: 'Jonah-May-OSS/truenas-proxmox'

jobs:
  build_package:
    runs-on: ubuntu-latest
    steps:
      # Checkout the official packer repository
      - name: Checkout packer repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PACKER_REPO }}
          path: packer

      # Determine branch and set versioning
      - name: Set environment variables
        shell: bash
        run: |
          REF="${{ github.event.client_payload.ref }}"
          # Strip refs/heads/ to get branch name
          BRANCH="${REF#refs/heads/}"
          echo "GitHub branch is: $BRANCH"

          if [[ "$BRANCH" == feature_* ]] || [[ "$BRANCH" == ng ]]; then
            FOLDER="development"
            VERSION="3.0.0-alpha1"
            REPO_NAME="truenas-proxmox-snapshots"
          elif [[ "$BRANCH" == master ]]; then
            FOLDER="testing"
            VERSION="3.0.0-beta1"
            REPO_NAME="truenas-proxmox-testing"
          elif [[ "$BRANCH" =~ ^(v?3\.0|3\.0.*)$ ]]; then
            FOLDER="stable"
            VERSION="3.0.0"
            REPO_NAME="truenas-proxmox"
          else
            echo "ERROR: Unknown branch '$BRANCH'" >&2
            exit 1
          fi
          echo "buildFolder=$FOLDER" >> $GITHUB_ENV
          echo "DEB_PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "ARTIFACT_REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      # Checkout the plugin source repository
      - name: Checkout plugin source
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PLUGIN_SOURCE_REPO }}
          path: plugin-source

      # Populate packer directory with plugin files
      - name: Prepare packer directory
        shell: bash
        run: |
          set -euo pipefail
          rsync -a plugin-source/ packer/${{ env.buildFolder }}/

      # Fix permissions on DEBIAN metadata and scripts
      - name: Fix permissions
        shell: bash
        run: |
          chmod -R 0755 packer/${{ env.buildFolder }}/DEBIAN

      # Build the .deb package
      - name: Build Debian package
        shell: bash
        run: |
          dpkg-deb -Zgzip --build packer/${{ env.buildFolder }} \
            ${DEB_PACKAGE_NAME}_${DEB_PACKAGE_VERSION}_all.deb

      # Publish the package to Cloudsmith
      - name: Push to Cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: deb
          owner: ksatechnologies
          repo: ${{ env.ARTIFACT_REPO_NAME }}
          distro: debian
          release: ${{ env.DEB_DISTRO_VERSION }}
          file: ${DEB_PACKAGE_NAME}_${DEB_PACKAGE_VERSION}_all.deb
