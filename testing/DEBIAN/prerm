#!/bin/bash
# Abort immediately if a command fails, if a variable is unset, or if a pipeline fails
set -euo pipefail

# Debugging toggle
_DEBUG="on"

# Setup base variables
LIB_PATH="/usr/share"
PVEMANAGER_FILEPATH="${LIB_PATH}/pve-manager/js/pvemanagerlib.js"
ZFSPLUGIN_FILEPATH="${LIB_PATH}/perl5/PVE/Storage/ZFSPlugin.pm"
APIDOC_FILEPATH="${LIB_PATH}/pve-docs/api-viewer/apidoc.js"
FREENAS_FILEPATH="${LIB_PATH}/perl5/PVE/Storage/LunCmd/TrueNAS.pm"

# Utility: Restore a backup if it exists
restore_backup() {
    local orig_file="$1.orig"
    local target_file="$1"
    if [ -f "$orig_file" ]; then
        echo "Restoring original file $target_file from $orig_file"
        cp "$orig_file" "$target_file"
    else
        echo "WARNING: Backup file $orig_file not found. Skipping restore for $target_file"
    fi
}

echo "Initiating '$1' with arg '${2:-}'"

case "$1" in
  remove|upgrade|deconfigure)
    echo "Preparing system for removal of
