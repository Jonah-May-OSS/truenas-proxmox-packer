#!/bin/sh
# TrueNAS-Proxmox post-install script (DEBIAN/postinst)
# Applies UI patches then verifies and reloads Proxmox services

set -eu

# Debug toggle
_DEBUG=${_DEBUG:-on}

# 1) Figure out where Proxmox stores its UI files
#    (only version 7 used the pve-7 subdir; 8+ just use /usr/share)
PVE_VERSION=$(dpkg-query --showformat='${Version}' --show pve-manager 2>/dev/null || echo unknown)
MAJOR_VER=${PVE_VERSION%%.*}
[ "$_DEBUG" = "on" ] && echo "Proxmox Version: $PVE_VERSION"
[ "$_DEBUG" = "on" ] && echo "Proxmox Major Version: $MAJOR_VER"

case "$MAJOR_VER" in
  7) LIB_PATH="/usr/share/pve-7" ;;
  *) LIB_PATH="/usr/share"      ;;
esac

# 2) Paths to the UI and Perl plugin files
PVEMANAGER_FILEPATH="$LIB_PATH/pve-manager/js/pvemanagerlib.js"
APIDOC_FILEPATH="$LIB_PATH/pve-docs/api-viewer/apidoc.js"
ZFSPLUGIN_FILEPATH="$LIB_PATH/perl5/PVE/Storage/ZFSPlugin.pm"
TRUENAS_PLUGIN_FILEPATH="$LIB_PATH/perl5/PVE/Storage/LunCmd/TrueNAS.pm"
REST_CLIENT_FILEPATH="$LIB_PATH/perl5/REST/Client.pm"

# 3) Where we packaged your patch-files in the .deb
PATCH_DIR="/usr/share/truenas-proxmox/patches"

echo "Running TrueNAS-Proxmox post-install..."

# 4) Apply the GUI patches, if they exist
if [ -d "$PATCH_DIR" ]; then
  echo "-- Applying pvemanagerlib.js patch"
  patch "$PVEMANAGER_FILEPATH" < "$PATCH_DIR/pvemanagerlib.patch" || echo "   (patch failed or already applied)"

  echo "-- Applying apidoc.js patch"
  patch "$APIDOC_FILEPATH"    < "$PATCH_DIR/apidoc.patch"    || echo "   (patch failed or already applied)"
fi

# 5) Now verify everything is in place
echo "-- Verifying required files..."
missing=0
for f in \
  "$PVEMANAGER_FILEPATH" \
  "$APIDOC_FILEPATH" \
  "$ZFSPLUGIN_FILEPATH" \
  "$TRUENAS_PLUGIN_FILEPATH" \
  "$REST_CLIENT_FILEPATH"
do
  if [ ! -f "$f" ]; then
    echo "   ERROR: Required file missing: $f"
    missing=1
  fi
done

if [ "$missing" -ne 0 ]; then
  echo "One or more required files are missing; aborting installation."
  exit 1
fi

echo "-- All files present; reloading Proxmox services..."
systemctl reload-or-restart pvedaemon.service    || true
systemctl reload-or-restart pveproxy.service     || true
systemctl reload-or-restart pvestatd.service     || true
systemctl reload-or-restart pvescheduler.service || true

echo "TrueNAS-Proxmox integration successfully installed."
exit 0
