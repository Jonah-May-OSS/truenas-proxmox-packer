#!/bin/sh
# TrueNAS-Proxmox post-install script
# Abort on any error or unset variable
set -eu

# Debug toggle
_DEBUG=${_DEBUG:-on}

# Detect Proxmox version via dpkg-query
if PVE_VERSION=$(dpkg-query --showformat='${Version}' --show pve-manager 2>/dev/null); then
  :
else
  PVE_VERSION="unknown"
fi
MAJOR_VER=${PVE_VERSION%%.*}

if [ "$_DEBUG" = "on" ]; then
  echo "Proxmox Version: $PVE_VERSION"
  echo "Proxmox Major Version: $MAJOR_VER"
fi

# Determine library path (only Proxmox 7 uses pve-7 subdir)
case "$MAJOR_VER" in
  7) LIB_PATH="/usr/share/pve-7" ;;
  *) LIB_PATH="/usr/share"      ;;
esac

# Define file paths for UI and storage plugin
PVEMANAGER_FILEPATH="$LIB_PATH/pve-manager/js/pvemanagerlib.js"
APIDOC_FILEPATH="$LIB_PATH/pve-docs/api-viewer/apidoc.js"
ZFSPLUGIN_FILEPATH="$LIB_PATH/perl5/PVE/Storage/ZFSPlugin.pm"
TRUENAS_PLUGIN_FILEPATH="$LIB_PATH/perl5/PVE/Storage/LunCmd/TrueNAS.pm"
REST_CLIENT_FILEPATH="$LIB_PATH/perl5/REST/Client.pm"

# Directory inside the .deb where patch files live
PATCH_DIR="/usr/share/truenas-proxmox/patches"

echo "Running TrueNAS-Proxmox post-install script..."

# Backup original files before patching
if [ "$_DEBUG" = "on" ]; then
  echo "Backing up original UI and storage files..."
fi
for orig in \
     "$PVEMANAGER_FILEPATH" \
     "$APIDOC_FILEPATH" \
     "$ZFSPLUGIN_FILEPATH" \
; do
  if [ -f "$orig" ] && [ ! -f "${orig}.orig" ]; then
    echo "Backing up $orig to ${orig}.orig"
    cp -a "$orig" "${orig}.orig"
  fi
done

# Apply GUI & storage plugin patches if available
if [ -d "$PATCH_DIR" ]; then
  echo "Applying GUI/storage patches..."

  if [ -f "$PATCH_DIR/pvemanagerlib.patch" ]; then
    patch --forward "$PVEMANAGER_FILEPATH" < "$PATCH_DIR/pvemanagerlib.patch" \
      || echo "(pvemanagerlib patch failed)"
  fi

  if [ -f "$PATCH_DIR/apidoc.patch" ]; then
    patch --forward "$APIDOC_FILEPATH" < "$PATCH_DIR/apidoc.patch" \
      || echo "(apidoc patch failed)"
  fi

  # *** New: apply ZFSPlugin.pm.patch ***
  if [ -f "$PATCH_DIR/ZFSPlugin.pm.patch" ]; then
    patch --forward "$ZFSPLUGIN_FILEPATH" < "$PATCH_DIR/ZFSPlugin.pm.patch" \
      || echo "(ZFSPlugin.pm patch failed)"
  fi
fi

# Verify required files after install
echo "Verifying required files after install..."
missing=0
for file in \
     "$PVEMANAGER_FILEPATH" \
     "$APIDOC_FILEPATH" \
     "$ZFSPLUGIN_FILEPATH" \
     "$TRUENAS_PLUGIN_FILEPATH" \
     "$REST_CLIENT_FILEPATH" \
; do
  if [ ! -f "$file" ]; then
    echo "ERROR: Required file missing: $file"
    missing=1
  fi
done

if [ "$missing" -ne 0 ]; then
  echo "One or more required files are missing. Aborting installation."
  exit 1
fi

echo "All required files are present."

# Reload Proxmox services
echo "Reloading Proxmox services (best effort)..."
systemctl reload-or-restart pvedaemon.service    || true
systemctl reload-or-restart pveproxy.service     || true
systemctl reload-or-restart pvestatd.service     || true
systemctl reload-or-restart pvescheduler.service || true

echo "TrueNAS-Proxmox integration successfully installed."
exit 0
